version: "3"

services:
  elasticsearch:
    build:
      context: .
      dockerfile: ./elasticsearch/Dockerfile
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - es-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    environment:
      TZ: Asia/Tokyo
    ports:
      - 5044:5044
      - 9600:9600
    volumes:
      - ./logstash/pipeline/pipeline.conf:/usr/share/logstash/pipeline/pipeline.conf
      - ./logstash/pipeline/query.sql:/etc/logstash/conf.d/query.sql
      - ./logstash/jdbc/postgresql-42.3.2.jar:/usr/share/java/postgresql-42.3.2.jar
    depends_on:
      - elasticsearch

  postgres:
    image: postgres:14.1
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      TZ: Asia/Tokyo
    ports:
      - 5432:5432
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
    restart: always
    hostname: postgres

  nextjs:
    image: node:16.13-alpine3.14
    ports:
      - 3000:3000
      - 5555:5555
    volumes:
      - ./nextjs/app:/usr/src/app
    working_dir: /usr/src/app
    command: sh -c "npm install && npm run dev"

  nginx:
    image: nginx:1.21.6
    ports:
      - 80:80
    volumes:
      - ./nginx/config/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - nextjs

volumes:
  es-data:
  postgres:
