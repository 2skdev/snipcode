// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id     String @id
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model User {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email   String  @unique
  bio     String?
  github  String?
  twitter String?
  website String?

  posts     Post[]
  bookmarks Bookmark[]
  likes     Like[]
  comments  Comment[]
  account   Account?
}

model Post {
  id String @id @db.VarChar(16)

  user User @relation(fields: [userId], references: [id])

  userId      String
  title       String
  language    String
  code        String
  description String?

  bookmarks Bookmark[]
  likes     Like[]
  comments  Comment[]
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  userId String
  postId String
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  userId String
  postId String
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  userId  String
  postId  String
  comment String
}
